name: Make Distribution

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

env:
  EXIFTOOL_VERSION: 13.03


jobs:
  dist_windows:
    name: Make Windows Distribution
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: |
          choco install 7zip
          uv sync --group gui

      - name: Download exiftool
        shell: bash
        run: |
          curl -LO https://exiftool.org/exiftool-${{ env.EXIFTOOL_VERSION }}_64.zip
          7z x exiftool-${{ env.EXIFTOOL_VERSION }}_64.zip
          rm exiftool-${{ env.EXIFTOOL_VERSION }}_64.zip
          mv exiftool-${{ env.EXIFTOOL_VERSION }}_64 exiftool
          mv "exiftool/exiftool(-k).exe" exiftool/exiftool.exe

      - name: Bundle app
        shell: bash
        run: |
          uv run pyinstaller Watermarker.spec
          cd dist && 7z a Watermarker-windows.zip Watermarker/

      - name: Archive Distribution Files
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows
          path: dist/Watermarker-windows.zip

  dist_macos:
    name: Make MacOS Distribution
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync --group gui

      - name: Download exiftool
        shell: bash
        run: |
          curl -LO https://exiftool.org/Image-ExifTool-${{ env.EXIFTOOL_VERSION }}.tar.gz
          mkdir exiftool
          tar -xzf Image-ExifTool-${{ env.EXIFTOOL_VERSION }}.tar.gz -C ./exiftool --strip-components=1
          rm -rf exiftool/t
          rm Image-ExifTool-${{ env.EXIFTOOL_VERSION }}.tar.gz

      - name: Bundle App
        run: |
          brew install create-dmg
          uv run pyinstaller Watermarker.spec
          create-dmg --window-pos 200 120 --window-size 800 300 --icon-size 100 --app-drop-link 600 20 dist/Watermarker-macos.dmg dist/Watermarker.app

      - name: Archive Distribution Files
        uses: actions/upload-artifact@v4
        with:
          name: dist-macos
          path: dist/Watermarker-macos.dmg

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [dist_windows, dist_macos]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Dists
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Generate Release Notes
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
